apiVersion: apps/v1
kind: Deployment
{{ template "mediumlabs.metadata" . }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mediumlabs.selectorlabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mediumlabs.selectorlabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "golang.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: {{ .Values.restartPolicy | default "Always" | quote }}
      containers:
        - name: {{ template "mediumlabs.releasename" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.extraArgs }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.useEnvFromSecrets }}
          envFrom:
            - secretRef:
                name: vault-{{ .Release.Name }}
          {{- end }}
          env:
            {{- toYaml .Values.environment | nindent 12 }}
          {{- if .Values.applicationPort }}
          ports:
            - containerPort: {{ .Values.applicationPort }}
              name: http
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthEndpoint }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: {{ .Values.healthEndpoint }}
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - mountPath: {{ .Values.persistence.mountPath }}
              name: {{ .Release.Name }}-volume-name
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: {{ .Release.Name }}-volume-name
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-volumeclaim
      {{- end }}
