# Default values for helm-chart-test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global: { }
replicaCount: 2
applicationPort: 8080
healthEndpoint: /health

image:
  repository: "gcr.io/google-samples/hello-app"
  tag: "1.0"
  pullPolicy: IfNotPresent

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: {
  runAsUser: 1000,
  fsGroup: 1000
}

securityContext: {
  allowPrivilegeEscalation: false
}
  # capabilities:
  #   drop:
  #   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: false
  ssl: false
  className: "nginx"
  host: chart-example.local
  extraAnnotations: { }

resources:
  requests:
    memory: "64Mi"
    cpu: "25m"
  limits:
    memory: "512Mi"
    cpu: "500m"

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

useEnvFromSecrets: false

environment:
  - name: EXAMPLE_ENV_VAR
    value: "false"

#Container args
extraArgs: [ ]
#  "--argument1=value1"

persistence:
  enabled: false
  persistentVolume: false
  reclaimPolicy: Retain
  mountPath: /storage
#  size: "2Gi"
#  accessModes:
#    - ReadWriteMany


initContainersEnabled: false
#initContainers:
#  - name: take-data-dir-ownership
#    image: alpine:3
#    # Give `grafana` user (id 472) permissions a mounted volume
#    # https://github.com/grafana/grafana-docker/blob/master/Dockerfile
#    command:
#      - chown
#      - -R
#      - 472:472
#      - /var/lib/grafana
#    volumeMounts:
#      - name: data
#        mountPath: /var/lib/grafana
